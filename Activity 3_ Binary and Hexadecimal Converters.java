/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Andy Yan
 * 2021-06-14
 * Activity 3: Binary and Hexadecimal Converters
 * This program converts decimal to binary or hexadecimal values and also converts binary and hexadecimal values to decimal values
 */
public class BinHexDecConverter extends javax.swing.JFrame {

    /**
     * Creates new form BinHexDecConverter
     */
    public BinHexDecConverter() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LabelTitle = new javax.swing.JLabel();
        LabelDescription2 = new javax.swing.JLabel();
        LabelDescription3 = new javax.swing.JLabel();
        LabelDescription1 = new javax.swing.JLabel();
        LabelDescription6 = new javax.swing.JLabel();
        LabelDescription5 = new javax.swing.JLabel();
        LabelDescription4 = new javax.swing.JLabel();
        BoxDecInput1 = new javax.swing.JTextField();
        BoxBinInput = new javax.swing.JTextField();
        BoxHexInput = new javax.swing.JTextField();
        BoxDecInput2 = new javax.swing.JTextField();
        ButtonDecToBin = new javax.swing.JButton();
        ButtonBinToDec = new javax.swing.JButton();
        ButtonDecToHex = new javax.swing.JButton();
        ButtonHexToDec = new javax.swing.JButton();
        LabelDecToBinOutput = new javax.swing.JLabel();
        LabelBinToDecOutput = new javax.swing.JLabel();
        LabelDecToHexOutput = new javax.swing.JLabel();
        LabelHexToDecOutput = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        LabelTitle.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        LabelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelTitle.setText("--Number Systems--");

        LabelDescription2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        LabelDescription2.setText("Enter a decimal number: ");

        LabelDescription3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        LabelDescription3.setText("Enter a binary number  : ");

        LabelDescription1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        LabelDescription1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelDescription1.setText("Decimal and Binary");

        LabelDescription6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        LabelDescription6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelDescription6.setText("Decimal and Hexadecimal");

        LabelDescription5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        LabelDescription5.setText("Enter a hexdec number : ");

        LabelDescription4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        LabelDescription4.setText("Enter a decimal number: ");

        BoxDecInput1.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        BoxBinInput.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        BoxHexInput.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        BoxDecInput2.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        ButtonDecToBin.setText("Dec to Bin");
        ButtonDecToBin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonDecToBinActionPerformed(evt);
            }
        });

        ButtonBinToDec.setText("Bin to Dec");
        ButtonBinToDec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonBinToDecActionPerformed(evt);
            }
        });

        ButtonDecToHex.setText("Dec to Hex");
        ButtonDecToHex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonDecToHexActionPerformed(evt);
            }
        });

        ButtonHexToDec.setText("Dec to Bin");
        ButtonHexToDec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonHexToDecActionPerformed(evt);
            }
        });

        LabelDecToBinOutput.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        LabelDecToBinOutput.setText("-");

        LabelBinToDecOutput.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        LabelBinToDecOutput.setText("-");

        LabelDecToHexOutput.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        LabelDecToHexOutput.setText("-");

        LabelHexToDecOutput.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        LabelHexToDecOutput.setText("-");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabelDescription1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LabelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LabelDescription6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LabelDescription4)
                            .addComponent(LabelDescription5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(BoxHexInput, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(BoxDecInput2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ButtonDecToHex)
                                .addGap(14, 14, 14)
                                .addComponent(LabelDecToHexOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ButtonHexToDec)
                                .addGap(18, 18, 18)
                                .addComponent(LabelHexToDecOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(LabelDescription3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BoxBinInput))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(LabelDescription2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BoxDecInput1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ButtonBinToDec)
                                .addGap(18, 18, 18)
                                .addComponent(LabelBinToDecOutput, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ButtonDecToBin)
                                .addGap(18, 18, 18)
                                .addComponent(LabelDecToBinOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LabelTitle)
                .addGap(13, 13, 13)
                .addComponent(LabelDescription1)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabelDescription2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(BoxDecInput1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ButtonDecToBin)
                        .addComponent(LabelDecToBinOutput)))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabelDescription3)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(BoxBinInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ButtonBinToDec)
                        .addComponent(LabelBinToDecOutput)))
                .addGap(28, 28, 28)
                .addComponent(LabelDescription6)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(LabelDescription4)
                        .addGap(44, 44, 44)
                        .addComponent(LabelDescription5))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BoxDecInput2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonDecToHex)
                            .addComponent(LabelDecToHexOutput))
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BoxHexInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonHexToDec)
                            .addComponent(LabelHexToDecOutput))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonDecToBinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonDecToBinActionPerformed
        // TODO add your handling code here:
        int iDec;
        //Exceptions
        try{//Number format
            iDec = Integer.parseInt(BoxDecInput1.getText());
        }catch(NumberFormatException e){
            LabelDecToBinOutput.setText("Invalid Input");
            return;//Return so rest of code doesnt execute
        }
        if(iDec<0){//If negative
            LabelDecToBinOutput.setText("Invalid Input");
            return;
        }
        if(iDec==0){//If 0
            LabelDecToBinOutput.setText("0");
            return;
        }
        String sBin = "";
        int binarr[] = new int[1001];//Array to store binary value
        int index = 0;
        while(iDec > 0){
            binarr[index] = iDec%2;//1 for odd 0 for even
            iDec /= 2;//Divide entire number by two
            index++;
        }
        for(int i = index-1;i>=0;i--){
            sBin+=String.valueOf(binarr[i]);//Create binary string
        }
        LabelDecToBinOutput.setText(sBin);
    }//GEN-LAST:event_ButtonDecToBinActionPerformed

    private void ButtonBinToDecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonBinToDecActionPerformed
        // TODO add your handling code here:
        int iBin;
        try{//Number format
            iBin = Integer.parseInt(BoxBinInput.getText());
        }catch(NumberFormatException e){
            LabelBinToDecOutput.setText("Invalid Input");
            return;//Return so rest of code doesnt execute
        }
        if(iBin<0){//If negative
            LabelBinToDecOutput.setText("Invalid Input");
            return;
        }
        //Check for proper binary value
        String sBin = String.valueOf(iBin);
        for(int i = 0;i<sBin.length();i++){
            System.out.println(sBin.charAt(i));
            if(sBin.charAt(i)!='0'){
                if(sBin.charAt(i)!='1'){
                    LabelBinToDecOutput.setText("Invalid Input");
                    return;
                }
            }
        }
        iBin = Integer.parseInt(BoxBinInput.getText());
        int iDec = 0;
        int base = 1;//base value 2^x (starting base 1)
        int temp = iBin;
        while(temp > 0){
            int right = temp%10;//starting from rightmost side checks for either 1 or 0
            temp /= 10;//going up the digits
            iDec+=right*base;//Adds the value to answer 
            base*=2;//increase base
        }
        LabelBinToDecOutput.setText(String.valueOf(iDec));
    }//GEN-LAST:event_ButtonBinToDecActionPerformed

    private void ButtonDecToHexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonDecToHexActionPerformed
        // TODO add your handling code here:
        int iDec;
        //Exceptions
        try{//Number format
            iDec = Integer.parseInt(BoxDecInput2.getText());
        }catch(NumberFormatException e){
            LabelDecToHexOutput.setText("Invalid Input");
            return;//Return so rest of code doesnt execute
        }
        if(iDec<0){//If negative
            LabelDecToHexOutput.setText("Invalid Input");
            return;
        }
        if(iDec==0){//If 0
            LabelDecToHexOutput.setText("0");
            return;
        }
        char hexarr[] = new char[101];//Array to store hexadecimal value
        String sHex = "";
        int index = 0;
        int IntegerCharConstant = 48;//Integer ascii value
        int LetterCharConstant = 55;//Letters ascii value
        while(iDec != 0){
            int rem = 0;//Remainder
            rem = iDec%16;
            //if remainder < 10
            if(rem < 10){
                hexarr[index] = (char)(rem+IntegerCharConstant);//if the remainder is 0-9 the char stays the same as the number
            }else{
                hexarr[index] = (char)(rem+LetterCharConstant);//else the char becomes a letter
            }
            index++;
            iDec /= 16;
        }
        for(int i = index-1;i>=0;i--){
            sHex += Character.toString(hexarr[i]);//Creates hexadeciaml string
        }
        LabelDecToHexOutput.setText(sHex);
    }//GEN-LAST:event_ButtonDecToHexActionPerformed

    private void ButtonHexToDecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonHexToDecActionPerformed
        // TODO add your handling code here:
        String sHex = BoxHexInput.getText();
        if(!hexValid(sHex)){//Checks if valid
            LabelHexToDecOutput.setText("Invalid Input");
            return;
        }
        int iDec = Integer.parseInt(sHex,16);//Java built in method
        LabelHexToDecOutput.setText(String.valueOf(iDec));
    }//GEN-LAST:event_ButtonHexToDecActionPerformed
    public boolean hexValid(String hex){//checks if hexadecimal value is valid
        for(int i =0;i<hex.length();i++){
            //if the character is not equal to the proper chars its invalid
            if(hex.charAt(i)!='0'&&hex.charAt(i)!='1'&&hex.charAt(i)!='2'&&hex.charAt(i)!='3'&&hex.charAt(i)!='4'&&hex.charAt(i)!='5'&&hex.charAt(i)!='6'&&hex.charAt(i)!='7'&&hex.charAt(i)!='8'&&hex.charAt(i)!='9'&&hex.charAt(i)!='A'&&hex.charAt(i)!='B'&&hex.charAt(i)!='C'&&hex.charAt(i)!='D'&&hex.charAt(i)!='E'&&hex.charAt(i)!='F'){
                return false;
            }
        }
        return true;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BinHexDecConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BinHexDecConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BinHexDecConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BinHexDecConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BinHexDecConverter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BoxBinInput;
    private javax.swing.JTextField BoxDecInput1;
    private javax.swing.JTextField BoxDecInput2;
    private javax.swing.JTextField BoxHexInput;
    private javax.swing.JButton ButtonBinToDec;
    private javax.swing.JButton ButtonDecToBin;
    private javax.swing.JButton ButtonDecToHex;
    private javax.swing.JButton ButtonHexToDec;
    private javax.swing.JLabel LabelBinToDecOutput;
    private javax.swing.JLabel LabelDecToBinOutput;
    private javax.swing.JLabel LabelDecToHexOutput;
    private javax.swing.JLabel LabelDescription1;
    private javax.swing.JLabel LabelDescription2;
    private javax.swing.JLabel LabelDescription3;
    private javax.swing.JLabel LabelDescription4;
    private javax.swing.JLabel LabelDescription5;
    private javax.swing.JLabel LabelDescription6;
    private javax.swing.JLabel LabelHexToDecOutput;
    private javax.swing.JLabel LabelTitle;
    // End of variables declaration//GEN-END:variables
}
