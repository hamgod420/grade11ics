/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.util.*;
/**
 *
 * @author Andy Yan
 * Activity 4: Data Management and Parallel Arrays
 * This program is a standard calculator with some scientific features
 */
public class Calculator extends javax.swing.JFrame {

    /**
     * Creates new form Calculator
     */
    public Calculator() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BoxInput = new javax.swing.JTextField();
        ButtonPercent = new javax.swing.JButton();
        ButtonClearAll = new javax.swing.JButton();
        ButtonClearInput = new javax.swing.JButton();
        ButtonBackspace = new javax.swing.JButton();
        ButtonReciprocal = new javax.swing.JButton();
        ButtonPowerOf2 = new javax.swing.JButton();
        ButtonSqrt = new javax.swing.JButton();
        ButtonDivide = new javax.swing.JButton();
        Button7 = new javax.swing.JButton();
        Button8 = new javax.swing.JButton();
        Button9 = new javax.swing.JButton();
        ButtonMultiply = new javax.swing.JButton();
        Button4 = new javax.swing.JButton();
        Button5 = new javax.swing.JButton();
        Button6 = new javax.swing.JButton();
        ButtonSubtract = new javax.swing.JButton();
        Button1 = new javax.swing.JButton();
        Button2 = new javax.swing.JButton();
        Button3 = new javax.swing.JButton();
        ButtonAdd = new javax.swing.JButton();
        ButtonChangeSign = new javax.swing.JButton();
        Button0 = new javax.swing.JButton();
        ButtonDecimal = new javax.swing.JButton();
        ButtonCalculate = new javax.swing.JButton();
        LabelCalculations = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Calculator");

        BoxInput.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        BoxInput.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        ButtonPercent.setText("%");
        ButtonPercent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonPercentActionPerformed(evt);
            }
        });

        ButtonClearAll.setText("CE");
        ButtonClearAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonClearAllActionPerformed(evt);
            }
        });

        ButtonClearInput.setText("C");
        ButtonClearInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonClearInputActionPerformed(evt);
            }
        });

        ButtonBackspace.setText("Backspace");
        ButtonBackspace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonBackspaceActionPerformed(evt);
            }
        });

        ButtonReciprocal.setText("1/x");
        ButtonReciprocal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonReciprocalActionPerformed(evt);
            }
        });

        ButtonPowerOf2.setText("x^2");
        ButtonPowerOf2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonPowerOf2ActionPerformed(evt);
            }
        });

        ButtonSqrt.setText("sqrt(x)");
        ButtonSqrt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSqrtActionPerformed(evt);
            }
        });

        ButtonDivide.setText("รท");
        ButtonDivide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonDivideActionPerformed(evt);
            }
        });

        Button7.setText("7");
        Button7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button7ActionPerformed(evt);
            }
        });

        Button8.setText("8");
        Button8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button8ActionPerformed(evt);
            }
        });

        Button9.setText("9");
        Button9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button9ActionPerformed(evt);
            }
        });

        ButtonMultiply.setText("ร");
        ButtonMultiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonMultiplyActionPerformed(evt);
            }
        });

        Button4.setText("4");
        Button4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button4ActionPerformed(evt);
            }
        });

        Button5.setText("5");
        Button5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button5ActionPerformed(evt);
            }
        });

        Button6.setText("6");
        Button6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button6ActionPerformed(evt);
            }
        });

        ButtonSubtract.setText("-");
        ButtonSubtract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSubtractActionPerformed(evt);
            }
        });

        Button1.setText("1");
        Button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button1ActionPerformed(evt);
            }
        });

        Button2.setText("2");
        Button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button2ActionPerformed(evt);
            }
        });

        Button3.setText("3");
        Button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button3ActionPerformed(evt);
            }
        });

        ButtonAdd.setText("+");
        ButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAddActionPerformed(evt);
            }
        });

        ButtonChangeSign.setText("+/-");
        ButtonChangeSign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonChangeSignActionPerformed(evt);
            }
        });

        Button0.setText("0");
        Button0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button0ActionPerformed(evt);
            }
        });

        ButtonDecimal.setText(".");
        ButtonDecimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonDecimalActionPerformed(evt);
            }
        });

        ButtonCalculate.setText("=");
        ButtonCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCalculateActionPerformed(evt);
            }
        });

        LabelCalculations.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ButtonPercent, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(ButtonClearAll, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(ButtonClearInput, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(ButtonBackspace, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ButtonReciprocal, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(ButtonPowerOf2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(ButtonSqrt, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(ButtonDivide, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Button7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(Button8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Button9, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(ButtonMultiply, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Button4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(Button5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Button6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(ButtonSubtract, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Button1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(Button2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Button3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(ButtonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ButtonChangeSign, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(Button0, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(ButtonDecimal, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(ButtonCalculate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(BoxInput, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(LabelCalculations, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LabelCalculations, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BoxInput, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ButtonPercent, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonClearAll, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonClearInput, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonBackspace, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ButtonReciprocal, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonPowerOf2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonSqrt, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonDivide, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Button7, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Button8, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Button9, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonMultiply, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Button4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Button5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Button6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonSubtract, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Button1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Button2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Button3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ButtonChangeSign, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Button0, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonDecimal, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonCalculate, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //Adds a 8
    private void Button8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button8ActionPerformed
        // TODO add your handling code here:
        TempInput += "8";
        BoxInput.setText(TempInput);
    }//GEN-LAST:event_Button8ActionPerformed
    //Adds a 9
    private void Button9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button9ActionPerformed
        // TODO add your handling code here:
        TempInput += "9";
        BoxInput.setText(TempInput);
    }//GEN-LAST:event_Button9ActionPerformed
    //Adds a 6
    private void Button6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button6ActionPerformed
        // TODO add your handling code here:
        TempInput += "6";
        BoxInput.setText(TempInput);
    }//GEN-LAST:event_Button6ActionPerformed
    //Changes the value of the number in BoxInput to its percentage
    private void ButtonPercentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonPercentActionPerformed
        // TODO add your handling code here:
        input[0]=0.01*(Double.parseDouble(TempInput));
        TempDisplay = TempInput + "%"; 
        TempInput = String.valueOf(input[0]);
        BoxInput.setText(String.valueOf(input[0]));
        LabelCalculations.setText(TempDisplay);
    }//GEN-LAST:event_ButtonPercentActionPerformed
    //Clears all calculations
    private void ButtonClearAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonClearAllActionPerformed
        // TODO add your handling code here:
        TempInput = "";
        LabelCalculations.setText("");
        Arrays.fill(input,Double.MIN_VALUE);
        BoxInput.setText("");
    }//GEN-LAST:event_ButtonClearAllActionPerformed
    //Clears BoxInput
    private void ButtonClearInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonClearInputActionPerformed
        // TODO add your handling code here:
        TempInput = "";
        BoxInput.setText("");
    }//GEN-LAST:event_ButtonClearInputActionPerformed
    //Changes the value of the number in BoxInput to its reciprocal
    private void ButtonReciprocalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonReciprocalActionPerformed
        // TODO add your handling code here:
        input[0]=Math.pow(Double.parseDouble(TempInput),-1);
        TempDisplay = "1/" + TempInput; 
        TempInput = String.valueOf(input[0]);
        BoxInput.setText(String.valueOf(input[0]));
        LabelCalculations.setText(TempDisplay);
        TempDisplay = "";
    }//GEN-LAST:event_ButtonReciprocalActionPerformed
    //Changes the value of the number in BoxInput to the 2nd power of the value
    private void ButtonPowerOf2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonPowerOf2ActionPerformed
        // TODO add your handling code here:
        input[0]=Math.pow(Double.parseDouble(TempInput),2);
        TempDisplay = TempInput + "^2"; 
        if(isInteger(input[0])){
            String display = String.format("%.0f",input[0]);
            TempInput = String.valueOf(display);
            BoxInput.setText(display);
        }else{
            TempInput = String.valueOf(input[0]);
            BoxInput.setText(String.valueOf(input[0]));
        }
        LabelCalculations.setText(TempDisplay);
        TempDisplay = "";
    }//GEN-LAST:event_ButtonPowerOf2ActionPerformed
    //Changes the value of the number in BoxInput to the square root of the value
    private void ButtonSqrtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSqrtActionPerformed
        // TODO add your handling code here:
        input[0]=Math.sqrt(Double.parseDouble(TempInput));//find sqrt of double value of input
        TempDisplay = "โ(" + TempInput + ")"; 
        if(isInteger(input[0])){
            String display = String.format("%.0f",input[0]);
            TempInput = String.valueOf(display);
            BoxInput.setText(display);
        }else{
            TempInput = String.valueOf(input[0]);
            BoxInput.setText(String.valueOf(input[0]));
        }
        LabelCalculations.setText(TempDisplay);
        TempDisplay = "";
    }//GEN-LAST:event_ButtonSqrtActionPerformed
    //Indicates that the next number inputed will be divided
    private void ButtonDivideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonDivideActionPerformed
        // TODO add your handling code here:
        //Read in the first value
        //Set operator to 4
        input[0] = Double.parseDouble(TempInput);
        currentOperator = 4;
        TempDisplay += "รท";
        TempInput = "";
        BoxInput.setText("รท");
        LabelCalculations.setText(TempDisplay);
    }//GEN-LAST:event_ButtonDivideActionPerformed
    //Adds a 7
    private void Button7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button7ActionPerformed
        // TODO add your handling code here:
        TempInput += "7";
        BoxInput.setText(TempInput);
    }//GEN-LAST:event_Button7ActionPerformed
    //Indicates that the next number inputed will be multiplied
    private void ButtonMultiplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonMultiplyActionPerformed
        // TODO add your handling code here:
        //Read in the first value
        //Set operator to 3
        input[0] = Double.parseDouble(TempInput);
        currentOperator = 3;
        TempDisplay += "ร";
        TempInput = "";
        BoxInput.setText("ร");
        LabelCalculations.setText(TempDisplay);
    }//GEN-LAST:event_ButtonMultiplyActionPerformed
    //Adds a 4
    private void Button4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button4ActionPerformed
        // TODO add your handling code here:
        TempInput += "4";
        BoxInput.setText(TempInput);
    }//GEN-LAST:event_Button4ActionPerformed
    //Adds a 5
    private void Button5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button5ActionPerformed
        // TODO add your handling code here:
        TempInput += "5";
        BoxInput.setText(TempInput);
    }//GEN-LAST:event_Button5ActionPerformed
    //Indicates that the next number inputed will be subtracted
    private void ButtonSubtractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSubtractActionPerformed
        // TODO add your handling code here:
        //Read in the first value
        //Set operator to 2
        input[0] = Double.parseDouble(TempInput);
        currentOperator = 2;
        TempDisplay += "-";
        TempInput = "";
        BoxInput.setText("-");
        LabelCalculations.setText(TempDisplay);
    }//GEN-LAST:event_ButtonSubtractActionPerformed
    //Adds a 1
    private void Button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button1ActionPerformed
        // TODO add your handling code here:
        TempInput += "1";
        BoxInput.setText(TempInput);
    }//GEN-LAST:event_Button1ActionPerformed
    //Adds a 2
    private void Button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button2ActionPerformed
        // TODO add your handling code here:
        TempInput += "2";
        BoxInput.setText(TempInput);
    }//GEN-LAST:event_Button2ActionPerformed
    //Adds a 3
    private void Button3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button3ActionPerformed
        // TODO add your handling code here:
        TempInput += "3";
        BoxInput.setText(TempInput);
    }//GEN-LAST:event_Button3ActionPerformed
    //Indicates that the next number inputed will be added
    private void ButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAddActionPerformed
        // TODO add your handling code here:
        //Read in the first value
        //Set operator to 1
        input[0] = Double.parseDouble(TempInput);
        currentOperator = 1;
        TempDisplay += "+";
        TempInput = "";
        BoxInput.setText("+");
        LabelCalculations.setText(TempDisplay);
    }//GEN-LAST:event_ButtonAddActionPerformed
    //Changes the value from neg to pos or pos to neg
    private void ButtonChangeSignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonChangeSignActionPerformed
        // TODO add your handling code here:
        //Parameters so there are no sign duplicates
        if(!NegOrPos){
            TempInput = "-" + TempInput;
            NegOrPos = true;
        }else{
            TempInput = TempInput.replace("-","");
            NegOrPos = false;
        }
        
        BoxInput.setText(TempInput);
    }//GEN-LAST:event_ButtonChangeSignActionPerformed
    //Adds a 0
    private void Button0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button0ActionPerformed
        // TODO add your handling code here:
        TempInput += "0";
        BoxInput.setText(TempInput);
    }//GEN-LAST:event_Button0ActionPerformed
    //Adds the dot for decimal values
    private void ButtonDecimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonDecimalActionPerformed
        // TODO add your handling code here:
        TempInput += ".";
        BoxInput.setText(TempInput);
    }//GEN-LAST:event_ButtonDecimalActionPerformed
    //Calculates the value inputed before and the value currently inputed depending on the operator
    private void ButtonCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonCalculateActionPerformed
        // TODO add your handling code here:
        //Variables that will be outputed depending on operator
        //1 = addition, 2 = subtraction, 3 = multiplication, 4 = division
        double ans;
        String display;
        switch(currentOperator){
            case 1:
                input[1] = Double.parseDouble(BoxInput.getText());//Takes in second value
                ans = input[0]+input[1];
                if(isInteger(ans)){//Checks if double
                    display = String.format("%.0f",ans);//Display without decimal
                    BoxInput.setText(display);
                    input[0] = ans;//Sets first value to ans so next calculation will take this value instead
                    TempInput = display;//Set temp var to ans value
                    TempDisplay = TempInput;
                    LabelCalculations.setText(TempDisplay);
                }else{
                    BoxInput.setText(String.valueOf(ans));
                    input[0] = ans;
                    TempInput = String.valueOf(ans);
                    TempDisplay = TempInput;
                    LabelCalculations.setText(TempDisplay);
                }
                break;
            case 2:
                input[1] = Double.parseDouble(BoxInput.getText());
                ans = input[0]-input[1];
                if(isInteger(ans)){
                    display = String.format("%.0f",ans);
                    BoxInput.setText(display);
                    input[0] = ans;
                    TempInput = display;
                    TempDisplay = TempInput;
                    LabelCalculations.setText(TempDisplay);
                }else{
                    BoxInput.setText(String.valueOf(ans));
                    input[0] = ans;
                    TempInput = String.valueOf(ans);
                    TempDisplay = TempInput;
                    LabelCalculations.setText(TempDisplay);
                }
                break;
            case 3:
                input[1] = Double.parseDouble(BoxInput.getText());
                ans = input[0]*input[1];
                if(isInteger(ans)){
                    display = String.format("%.0f",ans);
                    BoxInput.setText(display);
                    input[0] = ans;
                    TempInput = display;
                    TempDisplay = TempInput;
                    LabelCalculations.setText(TempDisplay);
                }else{
                    BoxInput.setText(String.valueOf(ans));
                    input[0] = ans;
                    TempInput = String.valueOf(ans);
                    TempDisplay = TempInput;
                    LabelCalculations.setText(TempDisplay);
                }
                break;
            case 4:
                input[1] = Double.parseDouble(BoxInput.getText());
                ans = input[0]/input[1];
                if(isInteger(ans)){
                    display = String.format("%.0f",ans);
                    BoxInput.setText(display);
                    input[0] = ans;
                    TempInput = display;
                    TempDisplay = TempInput;
                    LabelCalculations.setText(TempDisplay);
                }else{
                    BoxInput.setText(String.valueOf(ans));
                    input[0] = ans;
                    TempInput = String.valueOf(ans);
                    TempDisplay = TempInput;
                    LabelCalculations.setText(TempDisplay);
                }
                break;
        }
        
    }//GEN-LAST:event_ButtonCalculateActionPerformed
    //Deletes the right most char in BoxInput
    private void ButtonBackspaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonBackspaceActionPerformed
        // TODO add your handling code here:
        TempInput = BoxInput.getText();
        TempInput = TempInput.substring(0,TempInput.length()-1);
        BoxInput.setText(TempInput);
    }//GEN-LAST:event_ButtonBackspaceActionPerformed
    //Method for checking if a double is an integer
    //Used when displaying values
    //True means
    public boolean isInteger(double d){
        return (d%1)==0;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calculator().setVisible(true);
            }
        });
    }
    //Global variables used frequently around the class
    public static double input[]= new double[2];//two numbers at the current calculation
    public static int currentOperator;//1 = addition, 2 = subtraction, 3 = multiplication, 4 = division
    public static boolean onSecond = false;//negative means on first number, positive means on second number
    public static String TempInput = "";//temp var used to store the string value in BoxInput
    public static String TempDisplay = "";//temp var used to store the string value in LabelCalculations
    public static boolean NegOrPos = false;//negative = false, positive = true
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BoxInput;
    private javax.swing.JButton Button0;
    private javax.swing.JButton Button1;
    private javax.swing.JButton Button2;
    private javax.swing.JButton Button3;
    private javax.swing.JButton Button4;
    private javax.swing.JButton Button5;
    private javax.swing.JButton Button6;
    private javax.swing.JButton Button7;
    private javax.swing.JButton Button8;
    private javax.swing.JButton Button9;
    private javax.swing.JButton ButtonAdd;
    private javax.swing.JButton ButtonBackspace;
    private javax.swing.JButton ButtonCalculate;
    private javax.swing.JButton ButtonChangeSign;
    private javax.swing.JButton ButtonClearAll;
    private javax.swing.JButton ButtonClearInput;
    private javax.swing.JButton ButtonDecimal;
    private javax.swing.JButton ButtonDivide;
    private javax.swing.JButton ButtonMultiply;
    private javax.swing.JButton ButtonPercent;
    private javax.swing.JButton ButtonPowerOf2;
    private javax.swing.JButton ButtonReciprocal;
    private javax.swing.JButton ButtonSqrt;
    private javax.swing.JButton ButtonSubtract;
    private javax.swing.JLabel LabelCalculations;
    // End of variables declaration//GEN-END:variables
}
